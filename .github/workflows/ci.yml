name: 🚀 Comprehensive CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skip_cross_platform:
        description: 'Skip cross-platform testing (faster)'
        required: false
        default: false
        type: boolean
      skip_security:
        description: 'Skip security scanning'
        required: false
        default: false
        type: boolean

env:
  CARGO_TERM_COLOR: always

# Allow read access for all workflows
permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  # Core essential checks - always run
  core-ci:
    name: 🔧 Core CI
    uses: ./.github/workflows/core-ci.yml
    
  # Security checks - run on push to main or if dependencies change
  security:
    name: 🔒 Security
    if: |
      github.event_name == 'push' ||
      github.event.inputs.skip_security != 'true' ||
      contains(github.event.pull_request.changed_files, 'Cargo.lock') ||
      contains(github.event.pull_request.changed_files, 'Cargo.toml')
    uses: ./.github/workflows/security.yml
    
  # Quality and performance - run on code changes
  quality:
    name: 📊 Quality & Performance  
    needs: core-ci
    if: needs.core-ci.result == 'success'
    uses: ./.github/workflows/quality.yml
    
  # Cross-platform testing - can be skipped for faster feedback
  cross-platform:
    name: 🌍 Cross-Platform
    needs: core-ci
    if: |
      needs.core-ci.result == 'success' &&
      github.event.inputs.skip_cross_platform != 'true' &&
      (github.event_name == 'push' || github.event_name == 'schedule')
    uses: ./.github/workflows/cross-platform.yml

  # Final summary of all checks
  ci-summary:
    name: ✅ CI Summary
    runs-on: ubuntu-latest
    needs: [core-ci, security, quality, cross-platform]
    if: always()
    
    steps:
      - name: Comprehensive CI Status Summary
        run: |
          echo "## 🚀 Comprehensive CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          core_result="${{ needs.core-ci.result }}"
          security_result="${{ needs.security.result }}"
          quality_result="${{ needs.quality.result }}"
          platform_result="${{ needs.cross-platform.result }}"
          
          # Track which checks ran and their status
          all_success=true
          critical_failure=false
          
          echo "| Pipeline Stage | Status | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          
          # Core CI (critical)
          if [[ "$core_result" == "success" ]]; then
            echo "| 🔧 Core CI | ✅ Passed | Format, lint, build, test, demos |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔧 Core CI | ❌ Failed | Essential checks failed |" >> $GITHUB_STEP_SUMMARY
            all_success=false
            critical_failure=true
          fi
          
          # Security (important but not blocking for development)
          if [[ "$security_result" == "success" ]]; then
            echo "| 🔒 Security | ✅ Passed | Audit, licenses, SBOM |" >> $GITHUB_STEP_SUMMARY
          elif [[ "$security_result" == "skipped" ]]; then
            echo "| 🔒 Security | ⏭️ Skipped | No dependency changes |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔒 Security | ⚠️ Issues | Security concerns detected |" >> $GITHUB_STEP_SUMMARY
            all_success=false
          fi
          
          # Quality (important for maintainability)
          if [[ "$quality_result" == "success" ]]; then
            echo "| 📊 Quality | ✅ Passed | Coverage, benchmarks, docs |" >> $GITHUB_STEP_SUMMARY
          elif [[ "$quality_result" == "skipped" ]]; then
            echo "| 📊 Quality | ⏭️ Skipped | Waiting for core CI |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 📊 Quality | ⚠️ Issues | Quality metrics below threshold |" >> $GITHUB_STEP_SUMMARY
            all_success=false
          fi
          
          # Cross-platform (nice to have)
          if [[ "$platform_result" == "success" ]]; then
            echo "| 🌍 Cross-Platform | ✅ Passed | Linux, Windows, macOS |" >> $GITHUB_STEP_SUMMARY
          elif [[ "$platform_result" == "skipped" ]]; then
            echo "| 🌍 Cross-Platform | ⏭️ Skipped | Manual skip or dependency |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🌍 Cross-Platform | ⚠️ Issues | Platform compatibility problems |" >> $GITHUB_STEP_SUMMARY
            all_success=false
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall status
          if [[ "$critical_failure" == "true" ]]; then
            echo "🚨 **Critical CI failure** - Core checks must pass before merge" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The essential CI checks (format, lint, build, test) have failed." >> $GITHUB_STEP_SUMMARY
            echo "Please fix these issues before proceeding." >> $GITHUB_STEP_SUMMARY
            echo "❌ Critical CI failure - core checks must pass"
            exit 1
          elif [[ "$all_success" == "true" ]]; then
            echo "🎉 **All CI checks passed!** 🎉" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ✅ Validation Complete" >> $GITHUB_STEP_SUMMARY
            echo "- **Core functionality**: Verified and working" >> $GITHUB_STEP_SUMMARY
            echo "- **Security**: No vulnerabilities detected" >> $GITHUB_STEP_SUMMARY
            echo "- **Quality**: Meets all standards" >> $GITHUB_STEP_SUMMARY
            echo "- **Compatibility**: Works across platforms" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**🚀 Ready for merge!**" >> $GITHUB_STEP_SUMMARY
            echo "✅ All CI checks passed! Ready for merge."
          else
            echo "⚠️ **Some CI checks have issues** ⚠️" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "While core functionality works, some quality or compatibility" >> $GITHUB_STEP_SUMMARY
            echo "checks have detected issues. Review the details above." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Core CI passed** - merge is possible but issues should be addressed." >> $GITHUB_STEP_SUMMARY
            echo "⚠️ Some CI checks have issues but core functionality works"
          fi
          
          # Add performance information
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚡ Pipeline Performance" >> $GITHUB_STEP_SUMMARY
          echo "- **Parallel execution**: Multiple workflow stages run simultaneously" >> $GITHUB_STEP_SUMMARY
          echo "- **Intelligent skipping**: Workflows skip when not needed" >> $GITHUB_STEP_SUMMARY
          echo "- **Advanced caching**: Rust dependencies cached across jobs" >> $GITHUB_STEP_SUMMARY
          echo "- **Focused testing**: Only test what changed" >> $GITHUB_STEP_SUMMARY